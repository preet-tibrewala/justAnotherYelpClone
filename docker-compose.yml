version: "3.8"

services:
  mongo:
    image: mongo:latest
    container_name: mongo-yelp-clone
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    ports:
      - "27017:27017"
    expose:
      - 27017
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - 5672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DB: ${MONGO_DB}
      MONGO_AUTH_DB: ${MONGO_AUTH_DB}
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      - rabbitmq
      - mongo
    ports:
      - "8000:8000"
    expose:
      - 8000
    volumes:
      - photos:/app/media/photos
      - photos:/app/media/thumbs

  consumer:
    deploy:
      resources:
        limits:
          memory: 1g
    build:
      context: .
      dockerfile: Dockerfile.consumer
    environment:
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DB: ${MONGO_DB}
      MONGO_AUTH_DB: ${MONGO_AUTH_DB}
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    depends_on:
      - rabbitmq
      - mongo
    ports:
      - "8001:8001"
    expose:
      - 8001
    volumes:
      - photos:/app/media/photos
      - photos:/app/media/thumbs

volumes:
  mongo-data:
  photos:
